package main

import (
	"testing"
)

var startingState = `.#.#...|#.
.....#|##|
.|..|...#.
..|#.....#
#.#|||#|#|
...#.||...
.|....|...
||...#|.#|
|.||||..|.
...#.|..|.`

func TestExample(t *testing.T) {
	c := NewCollectionArea(startingState)

	if got := c.String(); got != startingState {
		t.Errorf("NewCollectionArea() = \n%v\n\nwant:\n%v", got, startingState)
		return
	}

	tests := []struct {
		name string
		want string
	}{
		{
			"After 1 minute",
			`.......##.
......|###
.|..|...#.
..|#||...#
..##||.|#|
...#||||..
||...|||..
|||||.||.|
||||||||||
....||..|.`,
		},
		{
			"After 2 minutes",
			`.......#..
......|#..
.|.|||....
..##|||..#
..###|||#|
...#|||||.
|||||||||.
||||||||||
||||||||||
.|||||||||`,
		},
		{
			"After 3 minutes",
			`.......#..
....|||#..
.|.||||...
..###|||.#
...##|||#|
.||##|||||
||||||||||
||||||||||
||||||||||
||||||||||`,
		},
		{
			"After 4 minutes",
			`.....|.#..
...||||#..
.|.#||||..
..###||||#
...###||#|
|||##|||||
||||||||||
||||||||||
||||||||||
||||||||||`,
		},
		{
			"After 5 minutes",
			`....|||#..
...||||#..
.|.##||||.
..####|||#
.|.###||#|
|||###||||
||||||||||
||||||||||
||||||||||
||||||||||`,
		},
		{
			"After 6 minutes",
			`...||||#..
...||||#..
.|.###|||.
..#.##|||#
|||#.##|#|
|||###||||
||||#|||||
||||||||||
||||||||||
||||||||||`,
		},
		{
			"After 7 minutes",
			`...||||#..
..||#|##..
.|.####||.
||#..##||#
||##.##|#|
|||####|||
|||###||||
||||||||||
||||||||||
||||||||||`,
		},
		{
			"After 8 minutes",
			`..||||##..
..|#####..
|||#####|.
||#...##|#
||##..###|
||##.###||
|||####|||
||||#|||||
||||||||||
||||||||||`,
		},
		{
			"After 9 minutes",
			`..||###...
.||#####..
||##...##.
||#....###
|##....##|
||##..###|
||######||
|||###||||
||||||||||
||||||||||`,
		},
		{
			"After 10 minutes",
			`.||##.....
||###.....
||##......
|##.....##
|##.....##
|##....##|
||##.####|
||#####|||
||||#|||||
||||||||||`,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			c.Tick()

			if got := c.String(); got != tt.want {
				t.Errorf("Got:\n%v\n\nWant:\n%v", got, tt.want)
			}
		})
	}
}

func Test_part1(t *testing.T) {
	const want = 1147
	if got := part1(startingState); got != want {
		t.Errorf("part1() = %v, want %v", got, want)
	}
}
